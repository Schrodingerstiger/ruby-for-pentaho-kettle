<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>Replicating DNA with Info and Target Steps</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <parameters>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>100</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user>-</created_user>
  <created_date>2011&#47;02&#47;19 12:27:15.970</created_date>
  <modified_user>-</modified_user>
  <modified_date>2011&#47;02&#47;19 12:27:15.970</modified_date>
  </info>
  <notepads>
  </notepads>
  <order>
  <hop> <from>Generate DNA</from><to>Split DNA (replication fork)</to><enabled>Y</enabled> </hop>  <hop> <from>Split DNA (replication fork)</from><to>leading strand</to><enabled>Y</enabled> </hop>  <hop> <from>Split DNA (replication fork)</from><to>lagging strand</to><enabled>Y</enabled> </hop>  <hop> <from>leading strand</from><to>Replicate Leading Strand</to><enabled>Y</enabled> </hop>  <hop> <from>lagging strand</from><to>Replicate Lagging Strand</to><enabled>Y</enabled> </hop>  <hop> <from>Replicate Leading Strand</from><to>evaluate DNA copy</to><enabled>Y</enabled> </hop>  <hop> <from>Replicate Lagging Strand</from><to>evaluate DNA copy</to><enabled>Y</enabled> </hop>  <hop> <from>evaluate DNA copy</from><to>Calculate Success</to><enabled>Y</enabled> </hop>  </order>
  <step>
    <name>Calculate Success</name>
    <type>GroupBy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <all_rows>N</all_rows>
      <ignore_aggregate>N</ignore_aggregate>
      <field_ignore/>
      <directory>%%java.io.tmpdir%%</directory>
      <prefix>grp</prefix>
      <add_linenr>N</add_linenr>
      <linenr_fieldname/>
      <give_back_row>Y</give_back_row>
      <group>
      </group>
      <fields>
        <field>
          <aggregate>copy_success_percent</aggregate>
          <subject>correct</subject>
          <type>AVERAGE</type>
          <valuefield/>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>826</xloc>
      <yloc>190</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Generate DNA</name>
    <type>TypeExitRubyStep</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
	<scripts>
		<script>
			<title>Ruby Script</title>
			<body># this script generates a random DNA sequence
bonds ||= {
	&quot;A&quot; =&gt; &quot;T&quot;,
	&quot;T&quot; =&gt; &quot;A&quot;,
	&quot;C&quot; =&gt; &quot;G&quot;,
	&quot;G&quot; =&gt; &quot;C&quot;
}

10000.times do 

	# pick first nucleotide	and its match
	nuc1 = bonds.keys[rand(4)]
	nuc2 = bonds[nuc1]

	$output &lt;&lt; {
		&quot;nuc1&quot; =&gt; nuc1,
		&quot;nuc2&quot; =&gt; nuc2
	}
end

# evaluate to nil, to avoid generating another row
nil</body>
			<role>ROW_SCRIPT</role>
		</script>
	</scripts>
	<rubyVersion>RUBY_1_8</rubyVersion>
	<clearInputFields>N</clearInputFields>

	<outputFields>
		<outputField>
			<name>nuc1</name>
			<type>2</type>
			<update>N</update>
		</outputField>
		<outputField>
			<name>nuc2</name>
			<type>2</type>
			<update>N</update>
		</outputField>
	</outputFields>
	<rubyVariables>
	</rubyVariables>
	<infoSteps>
	</infoSteps>
	<targetSteps>
	</targetSteps>
	<gemHome/>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>110</xloc>
      <yloc>186</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Replicate Lagging Strand</name>
    <type>TypeExitRubyStep</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
	<scripts>
		<script>
			<title>Ruby Script</title>
			<body># init matches
matches ||= {
	&quot;A&quot; =&gt; &quot;T&quot;,
	&quot;T&quot; =&gt; &quot;A&quot;,
	&quot;C&quot; =&gt; &quot;G&quot;,
	&quot;G&quot; =&gt; &quot;C&quot;
}


match_with = $row[&quot;nucleotide&quot;]
# introduce a 3 % chance of error
match_with = matches.keys[rand(4)] if rand() &lt;= 0.03

{&quot;bond&quot; =&gt; matches[match_with]+$row[&quot;nucleotide&quot;]}
</body>
			<role>ROW_SCRIPT</role>
		</script>
	</scripts>
	<rubyVersion>RUBY_1_8</rubyVersion>
	<clearInputFields>Y</clearInputFields>

	<outputFields>
		<outputField>
			<name>bond</name>
			<type>2</type>
			<update>N</update>
		</outputField>
	</outputFields>
	<rubyVariables>
	</rubyVariables>
	<infoSteps>
	</infoSteps>
	<targetSteps>
	</targetSteps>
	<gemHome/>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>562</xloc>
      <yloc>299</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Replicate Leading Strand</name>
    <type>TypeExitRubyStep</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
	<scripts>
		<script>
			<title>Ruby Script</title>
			<body># init matches
matches ||= {
	&quot;A&quot; =&gt; &quot;T&quot;,
	&quot;T&quot; =&gt; &quot;A&quot;,
	&quot;C&quot; =&gt; &quot;G&quot;,
	&quot;G&quot; =&gt; &quot;C&quot;
}


match_with = $row[&quot;nucleotide&quot;]
# introduce a 2% chance of error
match_with = matches.keys[rand(4)] if rand() &lt;= 0.02

{&quot;bond&quot; =&gt; $row[&quot;nucleotide&quot;]+matches[match_with]}

</body>
			<role>ROW_SCRIPT</role>
		</script>
	</scripts>
	<rubyVersion>RUBY_1_8</rubyVersion>
	<clearInputFields>Y</clearInputFields>

	<outputFields>
		<outputField>
			<name>bond</name>
			<type>2</type>
			<update>N</update>
		</outputField>
	</outputFields>
	<rubyVariables>
	</rubyVariables>
	<infoSteps>
	</infoSteps>
	<targetSteps>
	</targetSteps>
	<gemHome/>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>560</xloc>
      <yloc>79</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Split DNA (replication fork)</name>
    <type>TypeExitRubyStep</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
	<scripts>
		<script>
			<title>Ruby Script</title>
			<body>
# split the DNA and pass it to the appropriate steps

$target_steps[&quot;lead&quot;] &lt;&lt; {&quot;nucleotide&quot; =&gt; $row[&quot;nuc1&quot;]}
$target_steps[&quot;lag&quot;] &lt;&lt; {&quot;nucleotide&quot; =&gt; $row[&quot;nuc2&quot;]}
</body>
			<role>ROW_SCRIPT</role>
		</script>
	</scripts>
	<rubyVersion>RUBY_1_8</rubyVersion>
	<clearInputFields>Y</clearInputFields>

	<outputFields>
		<outputField>
			<name>nucleotide</name>
			<type>2</type>
			<update>N</update>
		</outputField>
	</outputFields>
	<rubyVariables>
	</rubyVariables>
	<infoSteps>
	</infoSteps>
	<targetSteps>
		<targetStep>
			<name>leading strand</name>
			<role>lead</role>
		</targetStep>
		<targetStep>
			<name>lagging strand</name>
			<role>lag</role>
		</targetStep>
	</targetSteps>
	<gemHome/>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>265</xloc>
      <yloc>186</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>evaluate DNA copy</name>
    <type>TypeExitRubyStep</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
	<scripts>
		<script>
			<title>Ruby Script</title>
			<body># read from both info steps and check if they are equal and valid

valid_bonds ||= [&quot;AT&quot;,&quot;TA&quot;,&quot;CG&quot;,&quot;GC&quot;]

while (lead = $info_steps[&quot;lead&quot;].read) &amp;&amp; (lag = $info_steps[&quot;lag&quot;].read) do
	
	# if the bonds are equal and valid, assume correctness
	if (lead[&quot;bond&quot;] == lag[&quot;bond&quot;] &amp;&amp; valid_bonds.find(lead[&quot;bond&quot;])) then
		$output &lt;&lt; lead.merge({&quot;correct&quot;=&gt;100})
	else 
		$output &lt;&lt; lead.merge({&quot;correct&quot;=&gt;0})
	end

end</body>
			<role>ROW_SCRIPT</role>
		</script>
	</scripts>
	<rubyVersion>RUBY_1_8</rubyVersion>
	<clearInputFields>N</clearInputFields>

	<outputFields>
		<outputField>
			<name>bond</name>
			<type>2</type>
			<update>N</update>
		</outputField>
		<outputField>
			<name>correct</name>
			<type>1</type>
			<update>N</update>
		</outputField>
	</outputFields>
	<rubyVariables>
	</rubyVariables>
	<infoSteps>
		<infoStep>
			<name>Replicate Leading Strand</name>
			<role>lead</role>
		</infoStep>
		<infoStep>
			<name>Replicate Lagging Strand</name>
			<role>lag</role>
		</infoStep>
	</infoSteps>
	<targetSteps>
	</targetSteps>
	<gemHome/>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>680</xloc>
      <yloc>187</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>lagging strand</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>395</xloc>
      <yloc>299</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>leading strand</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>393</xloc>
      <yloc>79</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
